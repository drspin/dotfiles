"Kevin Ewe - .vimrc 12/11/11 11:06PM
"
"Thanks:
" http://mislav.uniqpath.com/2011/12/vim-revisited/
"

set nocompatible
syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
set number

"" Pathogen
call pathogen#infect()
filetype plugin indent on       " load file type plugins + indentation

"" Whitespace
set wrap                      " don't wrap lines
set linebreak
set tabstop=2 shiftwidth=2      " a tab is two spaces
set expandtab                   " use spaces, not tabs
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"" Font and colors
colorscheme jellybeans
set guifont=Bitstream\ Vera\ Sans\ Mono:h14
"set guifont=Anonymous\ Pro:h14
set cursorline

" clear the search buffer when hitting return
:nnoremap <CR> :nohlsearch<cr>

" Wildmode
set wildmode=list:longest,list:full
set wildignore=.git,*.swp
set wildignore+=bin,*/tmp/*,*.so,*.swp,*.zip,*.pyc

"" key re-maps
"let mapleader=","

" double percentage sign in command mode is expanded
" to directory of current file - http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>

map <leader>f :CommandTFlush<cr>\|:CommandT<cr>
map <leader>F :CommandTFlush<cr>\|:CommandT %%<cr>

nnoremap <leader><leader> <c-^>
map Q gq

map <leader>o o<esc>

" don't move cursor on i
inoremap <Esc> <Esc>`^

" tab for completion
imap <c-tab> <c-x><c-o>


" Status line
if has("statusline") && !&cp
  " normal/insert mode statusline indicator
  if version >= 700
    au InsertEnter * hi StatusLine term=reverse ctermbg=5 gui=none guifg=DarkGrey guibg=DarkRed
    au InsertLeave * hi StatusLine term=reverse ctermfg=0 ctermbg=253 guifg=Black guibg=Grey
  endif

  " always show the status bar
  set laststatus=2

  " Start the status line
  set statusline=%f\ %m\ %r

  " Add fugitive
  set statusline+=%{fugitive#statusline()}

  " Finish the statusline
  set statusline+=Line:%l/%L[%p%%]
  set statusline+=Col:%v
  set statusline+=Buf:#%n
  set statusline+=[%b][0x%B]
endif

" golang fmt
au BufWritePost *.go !gofmt -w %
